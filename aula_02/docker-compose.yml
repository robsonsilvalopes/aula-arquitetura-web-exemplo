version: "3.6"
services:

  
  gateway:
    image: nginx
    volumes:
      # - ./gateway/nginx.conf:/tmp/nginx.conf
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./gateway/.htpasswd:/etc/nginx/.htpasswd
      # - ./src:/var/www/html # web app files
      # - ./files:/var/www/html
    ports:
      - 8080:80   # API gateway
      - 8000:8080 # Web app back-end (php/adianti)
    depends_on:
      - controller
  
  controller:
    # env_file:
    #   - ./tsa/web-app-variables.env
    build:
      # context: .
      # Diretory with TSA sources
      context: controller
      dockerfile: Dockerfile
      # target: builder
    # ports:
    #   - "8080:8080"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FLASK_RUN_PORT=8080
      - FLASK_ENV=development
      - FLASK_APP=app/main
      - FLASK_RUN_HOST=0.0.0.0
      # Adiciona o caminho do controller para permitir
      # importar classes que lá se encontram 
      - PYTHONPATH=$PALANTIR_HOME
      # As variáveis abaixo provêm do env-file .env 
      - DBCONFIG
      - PALANTIR_HOME
    #   - FLASK_SERVER_PORT=9091
    command: flask run
    # command: /bin/sh -c "while sleep 1000; do :; done"
    volumes:
      - ./controller/app:/code/app
      - ./files:/code/app/files/
    # environment:
    #   FLASK_ENV: development
    stdin_open: true
    tty: true
  
  worker-math:
      build:
        # context: worker-db
        # dockerfile: Dockerfile
        context: .
        dockerfile: ./math/Dockerfile
      environment:
        - PYTHONPATH=$PALANTIR_HOME
        - PYTHONUNBUFFERED=TRUE
      # The Worker should be in the same directory that functions. Otherwise,
      # is necessary to specify the functions path.
      # dbscan é a fila de jobs usada pelo serviço
      command: rq worker --path /code/app --url redis://redis:6379 math

      # To debug the Worker. In addition to the line below, you should log into
      # the docker container and manually execute the above command.
      # entrypoint: ["sh", "-c", "sleep 2073600"]

      # Redis server needs to start before Worker module. Otherwise, the Worker
      # will attempt unsuccessfully establish a connection to the Redis manager,
      # causing the container broken.
      depends_on:
        - redis
      volumes:
      - ./files:/code/app/files/
  
  redis:
    image: "redis:alpine"

